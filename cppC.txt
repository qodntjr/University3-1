#include <algorithm>
#include <iostream>

using namespace std;

void pr(int v[], int size){
	for(int i; i<size; i++){
		cout << v[i] << ' ';
	}
	cout << endl;
}

int main(){
	int v[] = {4,3,5,1,2};
	int size = sizeof(v)/ sizeof(v[0]);
	pr(v,size);
	sort(v, v+size);
	pr(v,size);
}
------------------------------------------------------------------------
#include <iostream>
#include <cstdlib>
using namespace std;

void pr(int v[], int size){
	for(int i; i<size; i++){
		cout << v[i] << ' ';
	}
	cout << endl;
}

int static cmp(const void* a, const void* b){
	const int* x = (int*)a;
	const int* y = (int*)b;
	if(*x > *y){
		return 1;
	}
	else if(*x < *y){
		return -1;
	}
	else {
		return 0;
	}
}

int main(){
	int v[] = {4,3,5,1,2};
	int size = sizeof(v) / sizeof(v[0]);
	pr(v,size);
	qsort(v,size,sizeof(int),cmp);
	pr(v,size);
}
------------------------------------------------------------------------
MFC
int a = GetDlgltemInt(IDC_EDIT1);
int b = GetDlgltemInt(IDC_EDIT2);
SetDlgltemInt(IDC_EDIT3, a + b);